#! /usr/bin/env perl

use warnings;
use strict;
use version;
use File::Copy;
use Getopt::Long;
use lib 'tools/buildtools';
use ConfigUtil;

# version number
my $major = 0;
my $minor = 1;
my $micro = 0;

# project specified make variables
my %customs =
    (
     "TARGET" => "tensorlight",
     "ABBR" => "TL",
     "abbr" => "tl",
     "EXPORT_HEADERS" => "src/tl_tensor.h src/tl_check.h src/tl_type.h src/tl_util.h",
     "BUILDTOOLS_DIR" => "tools/buildtools",
     "SRC_DIR" => "src",
     "SRC_SUB_DIRS" => "",
     "SRC_EXTRA_CFLAGS" => '-I$(BUILD_DIR)/include/$(TARGET)',
     "SRC_REQUIRES" => "",
     "TEST_DIR" => "test",
     "TEST_SUB_DIRS" => "lightnettest",
     "TEST_EXTRA_CFLAGS" => '-D$(ABBR)_TEST_DIR="\"$(CURDIR)\"" -D$(ABBR)_BUILD_TEST_DIR="\"$(shell realpath $(OBJDIR))\"" -I../$(SRC_DIR)',
     "TEST_REQUIRES" => "check"
    );

# make variables that can be set by configure options
my @options =
    (
     # [ $opt_name, $var_name, $type, $default, $desc ]
     [ "build-dir", "BUILD_DIR", "DIR", "build", "building directory" ],
     [ "install-dir", "INSTALL_DIR", "DIR", "/usr/local", "installation directory" ],
     [ "prefix", "INSTALL_DIR", "DIR", "/usr/local", "same as --install-dir; who comes later counts" ],
     [ "pkgconfig-dir", "PKGCONFIG_DIR", "DIR", '$(INSTALL_DIR)/lib/pkgconfig', "pkgconfig directory" ],
     [ "with-cuda", "WITH_CUDA", "BOOL", "no", "set to yes if build with CUDA"],
     [ "cuda-install-dir", "CUDA_INSTALL_DIR", "DIR", "/usr/local/cuda", "cuda installation directory"],
     [ "debug", "DEBUG", "BOOL", "no", "set to yes when debugging" ],
    );

# parse configure options
my $options_obj = gen_options(\@options, "Generate configuration makefile for building $customs{TARGET}.");
GetOptions(%{$options_obj->{getopt_args}}) or die $options_obj->{format_usage};
my %opts = %{$options_obj->{options}};

print "configure $customs{TARGET} version $major.$minor.$micro\n";

# check configuration
common_checks(\%opts);

my $output;
$output = `pkg-config --modversion check`;
if (!defined $output or $output eq "") {
    err_exit("check is not installed");
}

my $config_str = <<EOC;
.SUFFIXES:
MAJOR = $major
MINOR = $minor
MICRO = $micro

EOC

$config_str .= config_to_str(\%opts);
$config_str .= "\n";
set_extra_bins(\%customs);
set_module_files(\%customs, "SRC");
set_module_files(\%customs, "TEST");
$config_str .= config_to_str(\%customs);

my $conf_file = "config.mk";
if (-e $conf_file) {
    copy($conf_file, "$conf_file.bak") or die "Cannot copy $conf_file: $!";
}
open my $conf_fh, '>', $conf_file or die "Cannot open $conf_file: $!";
print $conf_fh $config_str;
close $conf_fh;
print $config_str;
